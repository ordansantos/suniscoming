
import sys
sys.path.append("../")

import pygame
import pytmx
from pytmx.util_pygame import load_pygame

class Screen:
    a = 1 
    Matrix = [[0 for x in range(5)] for x in range(5)] 
    
    def __init__(self, screen_width, screen_height):
        
        self.screen = pygame.display.set_mode((screen_width, screen_height))
        self.imgback = pygame.image.load('tile_map.png').convert()
        self.t  = load_pygame('tile_map.tmx')
        #render_tiles_to_screen(self, 'tile_map.tmx')
        #img = pygame.image.load('tile_map.png')
        self.screen.blit(self.imgback, (0, 0))
        
        pygame.display.flip()
        
    def clear(self):
        pass
  
    def blitPerson(self, p):
        
        #if (self.a % 10 == 0):
       #     render_tiles_to_screen(self, 'tile_map.tmx')
        
        #self.screen.blit(self.imgback, (0, 0))
        self.a += 1
        img_person = pygame.image.load(p.getPath())
        self.screen.blit(img_person, p.getPosition())
        pygame.display.update()


rect_color = (255, 255, 0)
poly_color = (0, 255, 0)

def render_tiles_to_screen(self, filename):
    print 'entrou'
    tmx_data = self.t
    
    # iterate over all the visible layers, then draw them
    # according to the type of layer they are.
    for layer in tmx_data.visible_layers:
        
        # draw map tile layers
        if isinstance(layer, pytmx.TiledTileLayer):
            pass
            # iterate over the tiles in the layer
            for i in layer.tiles():
             #   self.screen.blit(image, (x * tmx_data.tilewidth , y * tmx_data.tileheight ))

                pass

    
